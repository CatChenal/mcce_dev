
../Stable-MCCE/bin/hem-lig-pw.py:def ddvv(v1, v2):
../Stable-MCCE/bin/step1.py:def ddvv(v1, v2):

# from /bin/pdbio.py:
def ddvv(xyz1, xyz2):
    """Distance squared between two vectors."""
    dx=xyz1[0]-xyz2[0]
    dy=xyz1[1]-xyz2[1]
    dz=xyz1[2]-xyz2[2]
    return dx*dx + dy*dy + dz*dz

# replace with:
#def ddvv(xyz1, xyz2):
#    return np.square(xyz1 - xyz2).sum()

# Assuming you have two vectors a and b
a = np.array([1, 2, 3])
b = np.array([4, 5, 6])

ssd = np.square(a - b).sum() # ~2+ x faster than np.sum(np.square(a - b))
print("np ssd", ssd)

sumsq_mcce = ddvv(a, b)
print("mcce ssd", sumsq_mcce)

